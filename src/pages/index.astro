---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import Bin from '../components/Bin.astro';

const bins = await getCollection('bins');

const sortOptions = [
  {
    key: 'latest',
    name: 'Latest',
    active: true,
  },
  {
    key: 'oldest',
    name: 'Oldest',
    active: false,
  },
  {
    key: 'name',
    name: 'Name',
    active: false,
  },
  {
    key: 'colour',
    name: 'Colour',
    active: false,
  },
  {
    key: 'retro',
    name: 'Retro',
    active: false,
  },
];
---

<Layout>
  <ul class="sort-bar">
    {
      sortOptions.map((option) => {
        return (
          <li class="">
            <a href="#" class={option.key == 'latest' ? 'active' : ''}>
              {option.name}
            </a>
          </li>
        );
      })
    }
  </ul>
  <section class="grid grid-cols-2 lg:grid-cols-4">
    {bins.map((bin) => <Bin {...bin.data} />)}
  </section>
</Layout>

<style>
  section {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
  }

  .sort-bar {
    background-color: #cccccc;
    overflow-x: scroll;
    white-space: nowrap;
  }

  .sort-bar::-webkit-scrollbar {
    display: none;
  }

  .sort-bar {
    -ms-overflow-style: none;
    /* IE and Edge */
    scrollbar-width: none;
    /* Firefox */
  }

  .sort-bar {
    li {
      list-style: none;
      display: inline-block;
    }

    a {
      display: block;
      padding: 0.25rem 0.75rem;
      border-top: 4px solid transparent;
      color: var(--text-color);
      text-decoration: none;
    }

    a.active,
    a:hover {
      border-color: var(--text-color);
    }
  }

  @media (min-width: 992px) {
    section {
      grid-template-columns: repeat(4, 1fr);
    }
  }
</style>
